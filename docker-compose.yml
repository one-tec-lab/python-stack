version: '3.5'

networks:
  sb_public:
    driver: bridge   
  sb_internal:     

# Names our volume
volumes:
  data-db:
  data-portainer:
  # data-postgres:
  # data-pgadmin:  
  # data-elastiksearch:
  mongo_data:
    driver: local
  es_data:
    driver: local
  graylog_journal:
    driver: local    

services:

  nginx-proxy:
    build: ./nginx
    restart: always    
    networks:
      - sb_public
      - sb_internal
    ports:
      - '127.0.0.1:8080:8080'
      - '127.0.0.1:8443:8443'
    volumes:
      - ./nginx/static:/app
      - ./nginx/certs_stack:/opt/bitnami/certs_stack
      #- ./nginx/nginx.conf:/opt/bitnami/nginx/conf/nginx.conf:ro
      - ./nginx/sb_block.conf:/opt/bitnami/nginx/conf/server_blocks/sb_block.conf:ro
    depends_on:
      - app

  app:
    build: ./app
    restart: always
    environment:
      RDS_HOST: db
      RDS_PORT: 3306
      RDS_DB_NAME: ${SB_DB_NAME:-stack_db}
      RDS_USERNAME: ${SB_DB_USER:-stack_db_user}
       # RDS_PASSWORD should be passed as environment Variable
      RDS_PASSWORD: ${SB_RDS_PASSWORD:-ch4ng3m3}
      SB_ENV: "PROD"
    networks:
      - sb_internal
    ports:
      - "127.0.0.1:20080:20080"
    #No local folders for volumes in prod. 
    #volumes:
    #  - ./app/workspace:/workspace
    #command: ./wait-for.sh db:3306 --timeout=90 -- bash -c "python3 manage.py migrate --no-input && python3 manage.py runserver 0.0.0.0:8000"
    command: bash -c "python3 manage.py migrate --no-input && python3 manage.py runserver 0.0.0.0:20080"
    #command: python3 -m http.server 81
    depends_on:
      - db
      - graylog            
    labels:
      - "traefik.enable=true"
      - "traefik.backend=app"
      - "traefik.docker.network=sb_public"
      - "traefik.frontend.rule=Host:${STACK_MAIN_DOMAIN:-localhost}"
      - "traefik.port=20080"   
    # logging:
    #   driver: gelf
    #   options:
    #     gelf-address: "udp://graylog:12201"
    #     tag: "logger-test"

  db:
    #container_name: db
    #image: mysql:5.7.26
    image: percona/percona-server:5.7
    #image: bitnami/mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: stack_db
      # 
      MYSQL_USER: stack_db_user
      # MSQL_PASSWORD should be passed as environment Variable
      MYSQL_PASSWORD: ${SB_MYSQL_PASSWORD:-ch4ng3m3}
      # Password for root access should be passed as environment Variable
      MYSQL_ROOT_PASSWORD: ${SB_MYSQL_ROOT_PASSWORD:-ch4ng3m3}
    networks:
      - sb_internal
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - "127.0.0.1:23306:3306"
      # Where our data will be persisted
    volumes:
      #regular mysql
      #- data-db:/var/lib/mysql
      #bitnami mysql
      - data-db:/bitnami/mysql/data
    labels:
      - traefik.enable=false      
    logging:
      driver: gelf
      options:
        gelf-address: "udp://localhost:12201"
        tag: "containers"
    depends_on:
      - graylog



  # Elasticsearch: https://www.elastic.co/guide/en/elasticsearch/reference/5.6/docker.html
  elasticsearch:
    networks:
      - sb_internal
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.6.1
    volumes:
      - es_data:/usr/share/elasticsearch/data
    environment:
      - http.host=0.0.0.0
      - transport.host=localhost
      - network.host=0.0.0.0
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    #mem_limit: 1g

  # Graylog: https://hub.docker.com/r/graylog/graylog/
  graylog:
    networks:
      - sb_internal
    image: graylog/graylog:3.0
    volumes:
      - graylog_journal:/usr/share/graylog/data/journal
    environment:
      # CHANGE ME (must be at least 16 characters)!
      - GRAYLOG_PASSWORD_SECRET=somepasswordpepper
      # Password: admin
      - GRAYLOG_ROOT_PASSWORD_SHA2=8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918
      - GRAYLOG_HTTP_EXTERNAL_URI=http://127.0.0.1:9000/
    links:
      - mongodb:mongo
      - elasticsearch
    depends_on:
      - mongodb
      - elasticsearch
    ports:
      # Graylog web interface and REST API
      - 9000:9000
      # Syslog TCP
      - 1514:1514
      # Syslog UDP
      - 1514:1514/udp
      # GELF TCP
      - 12201:12201
      # GELF UDP
      - 12201:12201/udp

  mongodb:
    networks:
      - sb_internal
    image: mongo:3
    volumes:
      - mongo_data:/data/db

  # reverse-proxy:
  #   #container_name: proxy
  #   image: traefik # The official Traefik docker image
  #   command: --api --docker # Enables the web UI and tells Traefik to listen to docker
  #   restart: always
    
  #   networks:
  #     - sb_public
  #     - sb_internal
  #   ports:
  #     - "80:80"     # The HTTP port
  #     - "443:443"
  #     - "127.0.0.1:20001:8080" # The Web UI (enabled by --api)
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock # So that Traefik can listen to the Docker events
  #     - ./proxy/traefik.toml:/traefik.toml # Traefik configuration file
  #     - ./proxy/acme:/acme # Tell Traefik to save SSL certs here
  #   labels:
  #     - "traefik.enable=false"


  # postgres:
  #   container_name: postgres_container
  #   image: postgres
  #   environment:
  #     POSTGRES_USER: ${POSTGRES_USER:-postgres}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
  #     PGDATA: /data/postgres
  #   volumes:
  #      - data-postgres:/data/postgres
  #   ports:
  #     - "5432:5432"
  #   networks:
  #     - sb_internal
  #   restart: unless-stopped
  #   labels:
  #     - "traefik.enable=false"
  
  # pgadmin:
  #   container_name: pgadmin_container
  #   image: dpage/pgadmin4
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
  #     PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-ch4ng3m3}
  #   volumes:
  #      - data-pgadmin:/root/.pgadmin
  #   ports:
  #     - "${PGADMIN_PORT:-5050}:80"
  #   networks:
  #     - sb_internal
  #   restart: unless-stopped
  #   labels:
  #     - "traefik.enable=false"

  # phpmyadmin:
  #   depends_on:
  #     - db
  #   image: phpmyadmin/phpmyadmin
  #   restart: always
  #   ports:
  #     - '127.0.0.1:28080:80'
  #   environment:
  #     PMA_HOST: db
  #     MYSQL_ROOT_PASSWORD: ${SB_MYSQL_ROOT_PASSWORD:-ch4ng3m3}
  #   networks:
  #     - sb_internal
  #   labels:
  #     - "traefik.enable=false"

