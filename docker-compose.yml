version: '3.5'

networks:
  sb_public:
    driver: bridge   
  sb_internal:     

# Names our volume
volumes:
  data_db:

  # data-postgres:
  # data-pgadmin:  

  data_mongo:
    driver: local
  data_elastics:
    driver: local
  data_log:
    driver: local    

services:

  proxy:
    build: ./proxy
    restart: always    
    networks:
      - sb_public
      - sb_internal
    ports:
      - 127.0.0.1:8080:8080
      - 127.0.0.1:8443:8443
    volumes:
      - ./proxy/static:/app
      - ./proxy/certs_stack:/opt/bitnami/certs_stack
      - ./proxy/nginx.conf:/opt/bitnami/nginx/conf/nginx.conf:ro
      - ./proxy/sb_block.conf:/opt/bitnami/nginx/conf/server_blocks/sb_block.conf:ro
    depends_on:
      - app

  app:
    build: ./app
    restart: always
    environment:
      RDS_HOST: db
      RDS_PORT: 3306
      RDS_DB_NAME: ${SB_DB_NAME:-stack_db}
      RDS_USERNAME: ${SB_DB_USER:-stack_db_user}
       # RDS_PASSWORD should be passed as environment Variable
      RDS_PASSWORD: ${SB_RDS_PASSWORD:-ch4ng3m3}
      SB_ENV: "PROD"
    networks:
      - sb_internal
    ports:
      - "127.0.0.1:20080:20080"
    #No local folders for volumes in prod. 
    #volumes:
    #  - ./app/workspace:/workspace
    command: bash -c "python3 manage.py migrate --no-input && python3 manage.py runserver 0.0.0.0:20080"
    #command: python3 -m http.server 81
    depends_on:
      - db        
    labels:
      - "traefik.enable=true"
      - "traefik.backend=app"
      - "traefik.docker.network=sb_public"
      - "traefik.frontend.rule=Host:${STACK_MAIN_DOMAIN:-localhost}"
      - "traefik.port=20080"   


  db:
    #container_name: db
    #image: mysql:5.7.26
    image: percona/percona-server:5.7
    #image: bitnami/mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: stack_db
      # 
      MYSQL_USER: stack_db_user
      # MSQL_PASSWORD should be passed as environment Variable
      MYSQL_PASSWORD: ${SB_MYSQL_PASSWORD:-ch4ng3m3}
      # Password for root access should be passed as environment Variable
      MYSQL_ROOT_PASSWORD: ${SB_MYSQL_ROOT_PASSWORD:-ch4ng3m3}
    networks:
      - sb_internal
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - "127.0.0.1:23306:3306"
      # Where our data will be persisted
    volumes:
      #regular mysql
      #- data_db:/var/lib/mysql
      #bitnami mysql
      - data_db:/bitnami/mysql/data
    labels:
      - traefik.enable=false      





  # reverse-proxy:
  #   #container_name: proxy
  #   image: traefik # The official Traefik docker image
  #   command: --api --docker # Enables the web UI and tells Traefik to listen to docker
  #   restart: always
    
  #   networks:
  #     - sb_public
  #     - sb_internal
  #   ports:
  #     - "80:80"     # The HTTP port
  #     - "443:443"
  #     - "127.0.0.1:20001:8080" # The Web UI (enabled by --api)
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock # So that Traefik can listen to the Docker events
  #     - ./proxy/traefik.toml:/traefik.toml # Traefik configuration file
  #     - ./proxy/acme:/acme # Tell Traefik to save SSL certs here
  #   labels:
  #     - "traefik.enable=false"


  # postgres:
  #   container_name: postgres_container
  #   image: postgres
  #   environment:
  #     POSTGRES_USER: ${POSTGRES_USER:-postgres}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
  #     PGDATA: /data/postgres
  #   volumes:
  #      - data-postgres:/data/postgres
  #   ports:
  #     - "5432:5432"
  #   networks:
  #     - sb_internal
  #   restart: unless-stopped
  #   labels:
  #     - "traefik.enable=false"
  
  # pgadmin:
  #   container_name: pgadmin_container
  #   image: dpage/pgadmin4
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
  #     PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-ch4ng3m3}
  #   volumes:
  #      - data-pgadmin:/root/.pgadmin
  #   ports:
  #     - "${PGADMIN_PORT:-5050}:80"
  #   networks:
  #     - sb_internal
  #   restart: unless-stopped
  #   labels:
  #     - "traefik.enable=false"

  # phpmyadmin:
  #   depends_on:
  #     - db
  #   image: phpmyadmin/phpmyadmin
  #   restart: always
  #   ports:
  #     - '127.0.0.1:28080:80'
  #   environment:
  #     PMA_HOST: db
  #     MYSQL_ROOT_PASSWORD: ${SB_MYSQL_ROOT_PASSWORD:-ch4ng3m3}
  #   networks:
  #     - sb_internal
  #   labels:
  #     - "traefik.enable=false"

